"""
Вычислить сумму знакопеременного ряда (|х(2n-1)|)/(2n-1)!, где х-матрица ранга к (к и матрица задаются случайным образом), n - номер слагаемого.
Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой.
У алгоритма д.б. линейная сложность. Знак первого слагаемого  -случайный.
"""

import random
import numpy as np
from decimal import Decimal, getcontext

# Функция для вычисления суммы знакопеременного ряда
def sum_of_the_series(t):
    n = 1  # Номер слагаемого
    curr_x = x.copy()  # Текущая матрица
    factorial = 1  # Накопляемый факториал
    res = 0  # Результат
    sign = random.choice([-1, 1])  # Переменная для смены знака(Знак первого слагаемого -случайный.)

    while True:
        curr_term = Decimal(np.linalg.det(np.linalg.matrix_power(curr_x, 2*n - 1)) / factorial)  # Вычисляем текущий член ряда
        res += sign * curr_term  # Прибавляем его к результату с учетом знака

        # Проверка точности
        if abs(curr_term) < 1 / (10 ** t):
            break

        # Меняем параметры для следующего слагаемого
        n += 1  # увеличиваем номер слагаемого
        sign = -sign  # меняем знак
        factorial *= (2 * n - 2)  # вычисляем факториал

    return res

try:
    # Ввод значения t
    print("Введите t, количество знаков после запятой:")
    t = int(input())
    while t > 300 or t < 1:  # ошибка в случае введения слишком малой точности
        t = int(input("Число неподходит по условию, введите число t, большее или равное 1, но меньше 300:\n"))
    print()

    k = random.randint(2, 10)  # ранг матрицы
    x = np.round(np.random.uniform(-1, 1, (k, k)), 3)  # создание матрицы (элементы матрицы от -1 до +1)

    # вывод сформированной матрицы
    print("Случайно сгенерированная матрица:")
    print(x)

    # Установка точности вычислений
    getcontext().prec = t

    # Вызов функции для вычисления суммы ряда точностью t
    result = sum_of_the_series(t)

    # Вывод результата
    print(f"Сумма ряда с точностью {t} знаков после запятой: {result:.{t}f}")

except ValueError:
    print("\nВведенный символ не является числом. Перезапустите программу и введите число.")
